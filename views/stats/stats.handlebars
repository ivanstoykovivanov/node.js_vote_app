<div class="stats-page">
    <img class="img-fluid main-img" src="/img/chart4.png" alt="">   
    <div id="best-actor-actress">
        <div class="container">
            <div class="row">
                <div class="col-sm-12 col-md-6">
                    <canvas id="actresses"></canvas>
                </div>
                <div class="col-sm-12 col-md-6">
                    <canvas id="actors"></canvas>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <canvas id="actresses2"></canvas>
                </div>
                <div class="col">
                    <canvas id="actors2"></canvas>
                </div>
            </div>
        </div>  
    </div>
    <img class="img-fluid" src="/img/chart4.png" alt="">   
    <img class="img-fluid" src="/img/chart4.png" alt="">   
    <div class="container">
        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-12">
                <canvas id="actresses3"></canvas>
            </div>
        </div>
    </div>
    <img class="img-fluid" src="/img/chart3.png" alt="">   
    <img class="img-fluid invert" src="/img/chart3.png" alt="">   
    <div class="container">
        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-12">
                <canvas id="actresses4"></canvas>
            </div>
        </div>
    <img class="img-fluid hue-rotate" src="/img/lorka.png" alt="">   
    <img class="img-fluid" src="/img/lorka.png" alt="">   
    </div>
</div>

<script>
        //get the names into string format: 
        const namesActresses = JSON.parse(decodeURIComponent("{{{namesActresses}}}"));
        const namesActors = JSON.parse(decodeURIComponent("{{{namesActors}}}"));
        const votesActresses = [{{votesActresses}}]; 
        const votesActors = [{{votesActors}}]; 
        console.log(namesActresses); 
        console.log(namesActresses); 
        console.log(namesActors); 
        console.log(votesActors); 

        createChart("actresses", namesActresses, votesActresses, "Най-добра актриса" );
        createChart("actresses2", namesActresses, votesActresses, "Най-добра актриса" );
        createChart("actresses3", namesActresses, votesActresses, "Най-добра актриса" );
        createChart("actresses4", namesActresses, votesActresses, "Най-добра актриса" );
        createChart("actors", namesActors, votesActors, "Най-добър актьор" );
        createChart("actors2", namesActors, votesActors, "Най-добър актьор" );

        // Create a function, just put the number of the charts , and the data from the res.
        function createChart(canvasId, namesP, votesP, diagramTitle){
            let ctx = document.getElementById(canvasId);
            Chart.defaults.global.defaultFontFamily =  'Lato';  
            Chart.defaults.global.defaultFontSize = 19;  
            Chart.defaults.global.defaultFontColor = "white";  

            return new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: namesP, 
                    datasets: [{
                        label: "votes",
                        data: votesP,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.5)',
                            'rgba(54, 162, 235, 0.5)',
                            'rgba(255, 206, 86, 0.5)',
                            'rgba(75, 192, 192, 0.5)'
                        ],
                        borderColor: [
                            'rgba(255,99,132,1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    title: {
                        display: true, 
                        text : diagramTitle, 
                        fontSize : 25
                    // color: "white"
                    }, 
                    legend: {display : false}, 
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero:true
                            }
                        }]
                    },
                    tooltips : {
                        enabled : true,
                    }
                }
            });
        }

</script>